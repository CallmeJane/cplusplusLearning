#pragma once
/*
	1.什么是c++?
	c++的特点：封装、继承、多态。
	c++支持的编程模式：面向对象编程、面向过程编程、泛型编程（STL,算法与容器分开，
	不特定某一种数据类型的一般化编程方式）
	优势：灵活、效率高

	2.什么是面向对象？（OOP）
	对现实世界理解、抽象的一种方法、思想。
	将需求要素转化成对象进行处理的思想。

	3.什么是设计模式？举例子
	被人们反复使用的编程方式的总结。
	eg:单例模式、工厂模式

	4.const的作用
	const修饰变量：变量不可修改
	const修饰函数：不能修改类内成员
	const修饰对象（const构成的重载）：const对象只能调用const函数，非const对象可以调用const函数

	5.static对象什么时候初始化？
	类中的static对象只在程序运行时初始化一次
	函数中static对象只初始化一次

	6.堆栈的区别？堆栈的生命周期？
	堆（操作系统，二级缓存，速度慢）：一般由程序员申请和释放，未回收的由操作系统回收
	栈（操作系统，一级缓存，速度快）：一般用来存放局部变量和函数参数，用完立即释放，
	用法和数据结构的栈比较像

	堆（数据结构）：可以看成一棵树（堆排序）
	栈（数据结构）：后进先出

	7.封装、继承和多态？
	----------------------------------------------------------
	封装：将函数和属性放到一个类中
		  防止数据在无意中被破坏
	继承：代码重用，节省时间
	多态：基类指针指向子类实例
		  调用相同的方法，产生不同的结果

	8.引用和指针的区别
	引用：是变量的别名，不能为空
		  不用分配内存
	指针：是一个变量，指向变量的地址，可以为空
		  需要分配内存

	9.什么是内存泄漏（一般对于一直运行的程序影响很大，对于运行一会儿就退出的
	程序影响很小）？
	对于内存泄漏，指针越界，你有什么方法？
	如何避免内存泄漏？
	内存泄漏：new/malloc的对象在使用完毕之后，没有释放，一直占用着内存
	避免：new/delete成对出现，malloc/free成对出现，
	异常处理时注意new/delete的配对
		
	10.常用的排序算法有哪些？优缺点是什么？
	选择(一般易用插入是排序)、冒泡、快速、归并、堆排序、插入排序。
	
	快速排序：冒泡排序的一种改进
		优点：数据移动少
		缺点：稳定性不足
	归并排序：分治法排序，稳定的排序算法，一般针对于总体无序，但局部有序
		优点：效率高O(n)，稳定
		缺点：比较占用内存

	11.new和malloc的异同？
	同：都用于内存的动态申请
	异：（1）new是c++的运算符，malloc的c的函数
		（2）malloc不能处理自定义类型的构造函数，new才可以
		（3）new近似=malloc+构造函数

	12.TCP和UDP的区别？什么是IOCP?
	TCP：面向连接的可靠传输，传输的基本单位是数据包（数据流）
	UDP：无连接的非可靠传输，传输效率高，传输的基本单位是数据报文

	IOCP:IO completion port(IO完成端口)，异步IO的API,可以高效的把事件通知给应用层
	与其他异步方式不同的是，将套接字【socket】与完成端口联结起来，然后就可以进行
	正常的winsock通讯了。当一个事件发生的时候，此完成端口就会被操作系统放到一个消息
	队列中，应用程序通过查询就可以查到这个事件。

	13.同步和异步的区别？
	同步：在发出一个调用之后，在没有得到结果之前，就不会返回。
	异步：在一个函数调用后，不用等待结果，而是由被调用者通过状态、消息来通知
	调用者或者使用回调来调用。

	14.c++的静态函数和静态变量。
	static成员变量在编译时初始化，在类外存储，只能类外初始化。
	静态函数的意义就是完成对静态变量的封装，处理。
	静态函数只能访问静态变量。原因：静态函数属于类，没有this指针，而非静态变量
	属于对象。非静态函数，this指针会被当做参数传入。

	15.说一下你对内存的了解。
	
*/
